1. program -> decl_part.                                                      FIRST=("int","bool",ε)                                FOLLOW=($)
2.1. decl_part -> type_id decl_part_rest.                                     FIRST=("int","bool")                                  FOLLOW=($)
2.2. decl_part_rest -> decl_part_func |                                       FIRST=("(")                                           FOLLOW=($)
                       var_decl decl_part_func.                               FIRST=(",",";")
2.3. decl_part_func -> func_decl decl_part_func_rest.                         FIRST=("(")                                           FOLLOW=($)
2.4. decl_part_func_rest -> type_id decl_part_func |                          FIRST=("int","bool")                                  FOLLOW=($)
                            ε.                                                FIRST=(ε)
2.5. type_id -> type id.                                                      FIRST=("int","bool")                                  FOLLOW=("(",",")
3.1. var_decl -> id_list ";" type_id var_decl_rest.                           FIRST=(",",";")                                       FOLLOW=("(")
3.2. var_decl_rest -> var_decl |                                              FIRST=(",",";")                                       FOLLOW=("(")
                      ε.                                                      FIRST=(ε)
4. type -> "int" | "bool".                                                    FIRST=("int","bool")                                  FOLLOW=(id)
5. id_list -> "," id id_list |                                                FIRST=(",")                                           FOLLOW=(";")
              ε.                                                              FIRST=(ε)
6. func_decl -> "(" params ")" body.                                          FIRST=("(")                                           FOLLOW=($,"int","bool")
7. params -> param_list |                                                     FIRST=("int","bool")                                  FOLLOW=(")")
             ε.                                                               FIRST=(ε)
8.1. param_list -> type_id param_list_rest.                                   FIRST=("int","bool")                                  FOLLOW=(")")
8.2. param_list_rest -> "," param_list |                                      FIRST=(",")                                           FOLLOW=(")")
                        ε.                                                    FIRST=(ε)
9.1. body -> "{" body_rest "}".                                               FIRST=("{")                                           FOLLOW=($,"int","bool")
9.2. body_rest -> stmt_seq |                                                  FIRST=(id,"return","{","if","while")                  FOLLOW=("}")
                  var_decl_body stmt_seq |                                    FIRST=("int","bool")
				  ε.                                                          FIRST=(ε)
9.3. var_decl_body -> type_id id_list ";" var_decl_body |                     FIRST=("int","bool")                                  FOLLOW=(id,"return","{","if","while","}")
                  ε.                                                          FIRST=(ε)
10. stmt_seq -> stmt stmt_seq |                                               FIRST=(id,"return","{","if","while")                  FOLLOW=("}")
                ε.                                                            FIRST=(ε)
11. stmt -> simple_stmt ";" |                                                 FIRST=(id,"return")                                   FOLLOW=(id,"return","{","if","while","}","fi","else")
            struct_stmt.                                                      FIRST=("{","if","while")
12.1. simple_stmt -> assignment_or_func_call |                                FIRST=(id)                                            FOLLOW=(";")
                     return_stmt.                                             FIRST=("return")
12.2. assignment_or_func_call -> id assignment_or_func_call_rest.             FIRST=(id)                                            FOLLOW=(";")
12.3. assignment_or_func_call_rest -> assignment |                            FIRST=(":=")                                          FOLLOW=(";")
                                      ε.                                      FIRST=(ε)
13. struct_stmt -> comp_stmt |                                                FIRST=("{")                                           FOLLOW=(id,"return","{","if","while","}","fi","else")
                   cond |                                                     FIRST=("if")
                   loop.                                                      FIRST=("while")
14. assignment -> ":=" expr .                                                 FIRST=(:=)                                            FOLLOW=(";")
15.1. cond -> "if" "(" expr ")" "then" stmt cond_rest.                        FIRST=("if")                                          FOLLOW=(id,"return","{","if","while","}","fi","else")
15.2. cond_rest -> "fi" |                                                     FIRST=("fi")                                          FOLLOW=(id,"return","{","if","while","}","fi","else")
                   "else" stmt "fi".                                          FIRST=("else")
16. loop -> "while" "(" expr ")" stmt .                                       FIRST=("while")                                       FOLLOW=(id,"return","{","if","while","}","fi","else"
17. func_call -> "(" args ")".                                                FIRST=("(")                                           FOLLOW=("*","/","and","+","-","or","=","!=","<","<=",">",">=",",",")",";")
18. args -> arg_list |                                                        FIRST=("true","false",[0-9]+,id,"(","+","-","not")    FOLLOW=(")")
            ε.                                                                FIRST=(ε)
19.1. arg_list -> expr arg_list_rest.                                         FIRST=("true","false",[0-9]+,id,"(","+","-","not")    FOLLOW=(")")
19.2. arg_list_rest -> "," arg_list |                                         FIRST=(",")                                           FOLLOW=(")")
                       ε.                                                     FIRST=(ε)
20. return_stmt -> "return" expr .                                            FIRST=("return")                                      FOLLOW=(";")                       
21. comp_stmt -> "{" stmt_seq "}".                                            FIRST=("{")                                           FOLLOW=(id,"return","{","if","while","}","fi","else")
22.1. expr -> simple_expr expr_rest                                           FIRST=("true","false",[0-9]+,id,"(","+","-","not")    FOLLOW=(")",";",",")
22.1. expr_rest -> rel_op simple_expr |                                       FIRST=("=","!=","<","<=",">",">=")                    FOLLOW=(")",";",",")
                   ε.                                                         FIRST=(ε)                       
23.1. simple_expr -> term simple_expr_rest                                    FIRST=("true","false",[0-9]+,id,"(","+","-","not")    FOLLOW=("=","!=","<","<=",">",">=",")",";",",")
23.2. simple_expr_rest -> add_op term simple_expr_rest |                      FIRST=("+","-","or")                                  FOLLOW=("=","!=","<","<=",">",">=",")",";",",")
                          ε.                                                  FIRST=(ε)
24.1. term -> factor term_rest                                                FIRST=("true","false",[0-9]+,id,"(","+","-","not")    FOLLOW=("+","-","or","=","!=","<","<=",">",">=",")",";",",")
24.2. term_rest -> mul_op factor term_rest |                                  FIRST=("*","/","and")                                 FOLLOW=("+","-","or","=","!=","<","<=",">",">=",")",";",",")
                   ε.                                                         FIRST=(ε)
25.1. factor -> const_val |                                                   FIRST=("true","false",[0-9]+)                         FOLLOW=("+","-","or","=","!=","<","<=",">",">=",")",";",",","*","/","and")
                "(" expr ")" |                                                FIRST=("(")
                id_or_func_call |                                             FIRST=(id)
                sign factor |                                                 FIRST=("+","-")
                "not" factor.                                                 FIRST=("not")
25.2. id_or_func_call -> id id_or_func_call_rest.                             FIRST=(id)                                            FOLLOW=("+","-","or","=","!=","<","<=",">",">=",")",";",",","*","/","and")
25.3. id_or_func_call_rest -> func_call |                                     FIRST=("(")                                           FOLLOW=("+","-","or","=","!=","<","<=",">",">=",")",";",",","*","/","and")
                              ε.                                              FIRST=(ε)
26. sign -> "+" | "-".                                                        FIRST=("+","-")                                       FOLLOW=("true","false",[0-9]+,id,"(","+","-","not")
27. mul_op -> "*" | "/" | "and".                                              FIRST=("*","/","and")                                 FOLLOW=("true","false",[0-9]+,id,"(","+","-","not")
28. add_op -> "+" | "-" | "or".                                               FIRST=("+","-","or")                                  FOLLOW=("true","false",[0-9]+,id,"(","+","-","not")
29. rel_op -> "=" | "!=" | "<"| "<="| ">"| ">=".                              FIRST=("=","!=","<","<=",">",">=")                    FOLLOW=("true","false",[0-9]+,id,"(","+","-","not")
30. const_val -> number | bool_const.                                         FIRST=("true","false",[0-9]+)                         FOLLOW=("+","-","or","=","!=","<","<=",">",">=",")",";",",","*","/","and")
31. number -> [0-9]+.                                                         FIRST=([0-9]+)                                        FOLLOW=("+","-","or","=","!=","<","<=",">",">=",")",";",",","*","/","and")
32. bool_const -> "true" | "false".                                           FIRST=("true","false")                                FOLLOW=("+","-","or","=","!=","<","<=",">",">=",")",";",",","*","/","and")
